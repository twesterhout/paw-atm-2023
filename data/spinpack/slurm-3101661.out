+ module load 2023
+ '[' -z '' ']'
+ case "$-" in
+ __lmod_sh_dbg=x
+ '[' -n x ']'
+ set +x
Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod's output
Shell debugging restarted
+ unset __lmod_sh_dbg
+ return 0
+ module load GCC/12.3.0 OpenMPI/4.1.5-GCC-12.3.0
+ '[' -z '' ']'
+ case "$-" in
+ __lmod_sh_dbg=x
+ '[' -n x ']'
+ set +x
Shell debugging temporarily silenced: export LMOD_SH_DBG_ON=1 for Lmod's output
Shell debugging restarted
+ unset __lmod_sh_dbg
+ return 0
+ cd example_03/8/
+ srun ../../spinpack/exe/spin --maxmem=0

SPINPACK version 2.59d 2023-07-20
 Copyright (C) 2001-2021 Joerg (dot) Schulenburg at ovgu.de
 released under the GNU General Public License
 base coding for Heisenberg-model (JJ) NN=48
Host: tcn252.local
DBG: SLURM_CLUSTER_NAME=snellius
DBG: SLURM_JOB_PARTITION=thin
DBG: PWD=/gpfs/home2/twest/spinpack-nix/example_03/8
DBG: program name (arg0): /gpfs/home2/twest/spinpack-nix/example_03/8/../../spinpack/exe/spin
DBG: argument 1: --maxmem=0
Compiler: GNUC 12.3.0
Compiler: STDC 199901
 CPU-Features: SSE SSE2 SSE3 AVX AVX2 BMI BMI2 int64 int128
 OpenMP-Support: OPENMP=201511
MPI: MPI-3.1 OMPI-4.1.5 using MPI-3.1
MPI: MPI_MAX_NUM=4096  mpi_n_bits=10  mpi_n= 1024
DBG: MPI_THREAD_MULTIPLE not supported
MPI: mpi_thread_level=0 (MPI_THREAD_SINGLE) requested=0 
MPI: using better scaling Alltoallv (since 2017-01-16)
MPI: partly nonblocking  Ialltoallv (since 2017-02-24)
MPI: SLURM_NNODES=8
MPI: SLURM_TASKS_PER_NODE=128(x8)
MPI: SLURM_CPUS_PER_TASK=1
DBG: SLURM_CPU_BIND=quiet,mask_cpu:0x00000000000000000000000000000001,0x00000000000000000000000000000002,0x00000000000000000000000000000004,0x00000000000000000000000000000008,0x00000000000000000000000000000010,0x00000000000000000000000000000020,0x00000000000000000000000000000040,0x00000000000000000000000000000080,0x00000000000000000000000000000100,0x00000000000000000000000000000200,0x00000000000000000000000000000400,0x00000000000000000000000000000800,0x00000000000000000000000000001000,0x00000000000000000000000000002000,0x00000000000000000000000000004000,0x00000000000000000000000000008000,0x00000000000000000000000000010000,0x00000000000000000000000000020000,0x00000000000000000000000000040000,0x00000000000000000000000000080000,0x00000000000000000000000000100000,0x00000000000000000000000000200000,0x00000000000000000000000000400000,0x00000000000000000000000000800000,0x00000000000000000000000001000000,0x00000000000000000000000002000000,0x00000000000000000000000004000000,0x00000000000000000000000008000000,0x00000000000000000000000010000000,0x00000000000000000000000020000000,0x00000000000000000000000040000000,0x00000000000000000000000080000000,0x00000000000000000000000100000000,0x00000000000000000000000200000000,0x00000000000000000000000400000000,0x00000000000000000000000800000000,0x00000000000000000000001000000000,0x00000000000000000000002000000000,0x00000000000000000000004000000000,0x00000000000000000000008000000000,0x00000000000000000000010000000000,0x00000000000000000000020000000000,0x00000000000000000000040000000000,0x00000000000000000000080000000000,0x00000000000000000000100000000000,0x00000000000000000000200000000000,0x00000000000000000000400000000000,0x00000000000000000000800000000000,0x00000000000000000001000000000000,0x00000000000000000002000000000000,0x00000000000000000004000000000000,0x00000000000000000008000000000000,0x00000000000000000010000000000000,0x00000000000000000020000000000000,0x00000000000000000040000000000000,0x00000000000000000080000000000000,0x00000000000000000100000000000000,0x00000000000000000200000000000000,0x00000000000000000400000000000000,0x00000000000000000800000000000000,0x00000000000000001000000000000000,0x00000000000000002000000000000000,0x00000000000000004000000000000000,0x00000000000000008000000000000000,0x00000000000000010000000000000000,0x00000000000000020000000000000000,0x00000000000000040000000000000000,0x00000000000000080000000000000000,0x00000000000000100000000000000000,0x00000000000000200000000000000000,0x00000000000000400000000000000000,0x00000000000000800000000000000000,0x00000000000001000000000000000000,0x00000000000002000000000000000000,0x00000000000004000000000000000000,0x00000000000008000000000000000000,0x00000000000010000000000000000000,0x00000000000020000000000000000000,0x00000000000040000000000000000000,0x00000000000080000000000000000000,0x00000000000100000000000000000000,0x00000000000200000000000000000000,0x00000000000400000000000000000000,0x00000000000800000000000000000000,0x00000000001000000000000000000000,0x00000000002000000000000000000000,0x00000000004000000000000000000000,0x00000000008000000000000000000000,0x00000000010000000000000000000000,0x00000000020000000000000000000000,0x00000000040000000000000000000000,0x00000000080000000000000000000000,0x00000000100000000000000000000000,0x00000000200000000000000000000000,0x00000000400000000000000000000000,0x00000000800000000000000000000000,0x00000001000000000000000000000000,0x00000002000000000000000000000000,0x00000004000000000000000000000000,0x00000008000000000000000000000000,0x00000010000000000000000000000000,0x00000020000000000000000000000000,0x00000040000000000000000000000000,0x00000080000000000000000000000000,0x00000100000000000000000000000000,0x00000200000000000000000000000000,0x00000400000000000000000000000000,0x00000800000000000000000000000000,0x00001000000000000000000000000000,0x00002000000000000000000000000000,0x00004000000000000000000000000000,0x00008000000000000000000000000000,0x00010000000000000000000000000000,0x00020000000000000000000000000000,0x00040000000000000000000000000000,0x00080000000000000000000000000000,0x00100000000000000000000000000000,0x00200000000000000000000000000000,0x00400000000000000000000000000000,0x00800000000000000000000000000000,0x01000000000000000000000000000000,0x02000000000000000000000000000000,0x04000000000000000000000000000000,0x08000000000000000000000000000000,0x10000000000000000000000000000000,0x20000000000000000000000000000000,0x40000000000000000000000000000000,0x80000000000000000000000000000000
DBG: SLURM_CPU_BIND_LIST=0x00000000000000000000000000000001,0x00000000000000000000000000000002,0x00000000000000000000000000000004,0x00000000000000000000000000000008,0x00000000000000000000000000000010,0x00000000000000000000000000000020,0x00000000000000000000000000000040,0x00000000000000000000000000000080,0x00000000000000000000000000000100,0x00000000000000000000000000000200,0x00000000000000000000000000000400,0x00000000000000000000000000000800,0x00000000000000000000000000001000,0x00000000000000000000000000002000,0x00000000000000000000000000004000,0x00000000000000000000000000008000,0x00000000000000000000000000010000,0x00000000000000000000000000020000,0x00000000000000000000000000040000,0x00000000000000000000000000080000,0x00000000000000000000000000100000,0x00000000000000000000000000200000,0x00000000000000000000000000400000,0x00000000000000000000000000800000,0x00000000000000000000000001000000,0x00000000000000000000000002000000,0x00000000000000000000000004000000,0x00000000000000000000000008000000,0x00000000000000000000000010000000,0x00000000000000000000000020000000,0x00000000000000000000000040000000,0x00000000000000000000000080000000,0x00000000000000000000000100000000,0x00000000000000000000000200000000,0x00000000000000000000000400000000,0x00000000000000000000000800000000,0x00000000000000000000001000000000,0x00000000000000000000002000000000,0x00000000000000000000004000000000,0x00000000000000000000008000000000,0x00000000000000000000010000000000,0x00000000000000000000020000000000,0x00000000000000000000040000000000,0x00000000000000000000080000000000,0x00000000000000000000100000000000,0x00000000000000000000200000000000,0x00000000000000000000400000000000,0x00000000000000000000800000000000,0x00000000000000000001000000000000,0x00000000000000000002000000000000,0x00000000000000000004000000000000,0x00000000000000000008000000000000,0x00000000000000000010000000000000,0x00000000000000000020000000000000,0x00000000000000000040000000000000,0x00000000000000000080000000000000,0x00000000000000000100000000000000,0x00000000000000000200000000000000,0x00000000000000000400000000000000,0x00000000000000000800000000000000,0x00000000000000001000000000000000,0x00000000000000002000000000000000,0x00000000000000004000000000000000,0x00000000000000008000000000000000,0x00000000000000010000000000000000,0x00000000000000020000000000000000,0x00000000000000040000000000000000,0x00000000000000080000000000000000,0x00000000000000100000000000000000,0x00000000000000200000000000000000,0x00000000000000400000000000000000,0x00000000000000800000000000000000,0x00000000000001000000000000000000,0x00000000000002000000000000000000,0x00000000000004000000000000000000,0x00000000000008000000000000000000,0x00000000000010000000000000000000,0x00000000000020000000000000000000,0x00000000000040000000000000000000,0x00000000000080000000000000000000,0x00000000000100000000000000000000,0x00000000000200000000000000000000,0x00000000000400000000000000000000,0x00000000000800000000000000000000,0x00000000001000000000000000000000,0x00000000002000000000000000000000,0x00000000004000000000000000000000,0x00000000008000000000000000000000,0x00000000010000000000000000000000,0x00000000020000000000000000000000,0x00000000040000000000000000000000,0x00000000080000000000000000000000,0x00000000100000000000000000000000,0x00000000200000000000000000000000,0x00000000400000000000000000000000,0x00000000800000000000000000000000,0x00000001000000000000000000000000,0x00000002000000000000000000000000,0x00000004000000000000000000000000,0x00000008000000000000000000000000,0x00000010000000000000000000000000,0x00000020000000000000000000000000,0x00000040000000000000000000000000,0x00000080000000000000000000000000,0x00000100000000000000000000000000,0x00000200000000000000000000000000,0x00000400000000000000000000000000,0x00000800000000000000000000000000,0x00001000000000000000000000000000,0x00002000000000000000000000000000,0x00004000000000000000000000000000,0x00008000000000000000000000000000,0x00010000000000000000000000000000,0x00020000000000000000000000000000,0x00040000000000000000000000000000,0x00080000000000000000000000000000,0x00100000000000000000000000000000,0x00200000000000000000000000000000,0x00400000000000000000000000000000,0x00800000000000000000000000000000,0x01000000000000000000000000000000,0x02000000000000000000000000000000,0x04000000000000000000000000000000,0x08000000000000000000000000000000,0x10000000000000000000000000000000,0x20000000000000000000000000000000,0x40000000000000000000000000000000,0x80000000000000000000000000000000
MPI.HELP: try setting OMPI_MCA_mpi_yield_when_idle=1 (busy_wait=off)
MPI: OMPI_MCA_hwloc_base_binding_policy=none
MPI: malloc_mpi_sendrecv_buffers= 2386 MiB
DBG: OpenMP threads=1
 set pt_n=$OMP_NUM_THREADS=1

CPU.cpuinfo: cores/cpu= 64 cpus/node= 2
MEM.vm.overcommit_memory= 1 (2 is good, 0 is bad)
WARNING: overcommit_memory < 2, linux may crash on memory pressure
MEM.statm0 vm,rss[4KB]= 8.9e+05 1.9e+04  vm,rss[B]= 3.66e+09 7.79e+07
MEM.status: VmPeak:	 3572332 kB
MEM.status: VmSize:	 3572332 kB
MEM.status: MemTotal:       263912064 kB
MEM.status: MemFree:        241381904 kB
MEM.status: MemAvailable:   238886624 kB
MEM numcores= 128 coremem[B]= 1.9e+09 (dflt[B]=70%=1.3e+09)
DBG: parse argument 1: --maxmem=0
DBG: opt_maxmem=0.000000e+00 (Byte per thread)
 write spins.pid
PTHREAD max=B_NUM=128 threads/mpi-task, pt_bits=0  pt_n= 1
PTHREAD use option -t<threads> [-v4]
DBG_OMP: create thread 0

DBG.cpumask: cpuset.bits=1024  CPU_SETSIZE=1024 CFG_CPUSET=2







DBG.cpumask     0. 0 0x0000000000000001 nbits=1  0...0 set 0
DBG.cpumask     0. 0 0x0000000000000001 nbits=1  0...0

DBG.cpumask     3. 0 0x0000000000000008 nbits=1  3...3 set 3

DBG.cpumask     1. 0 0x0000000000000002 nbits=1  1...1 set 1

DBG_PT: enter worker loop 0DBG_OMP: master still alive, go on ...
DBG.cpumask  1023. 0 0x0000000000000000 nbits=1 127...127 set 127


 Hcfg: H_JZ=1 Jadd=0.0 Ham2=0 Ham3=0 HFIELD=0 SZSYM=1
 using  L1_PACKED=0 VecType=1 Tnorm2=_int64
 h_file.h: TYPE_SIZE XY=4 BY=2 HR=8 in Byte, Hsize=6076kB
 using CKPT_HELP=0 (pkill -SIGUSR1 spin  for safe ckpt)
use symmetric base configurations (mandatory)
S1SYM: use S1-symmetric base configurations (default)
 pipe.c sub_ini STOREH=4 fread 8*sizeof(size_t)=64
CplxInfo: no complex numbers used, all numbers real
 long=8 int=4  double=8 sdouble=8  cplx=8 scplx=8
 tbase1=8 tbase=8

HRMAX=0 HRsize=8B
TUNING: VS= 32 (independent inner computations, vector/SIMD)
TUNING: NAH=NumAheadLines= 1024= 1K (matrix_lines/compute_block)
 NZXMAX= 434 (non-zero matrix elements per line, about Nw=432)
 NZ_BUFSZ1/NAH= 434.000
 HBLen= NZX*NAH= 444416= 434K  (non-zero matrix block length)
 hnzSize=Hsize/HBLen=6076KB/434K= 14B
 MPI_MAX_NUM= 4096  n_mpi= 1024   B_NUM=maxPT= 128  pt_n= 1
 estimated_mpi_flt_pktsize  pt_n*NAH*NZX*4B/mpi_n= 2KB
   maximum_mpi_flt_pktsize B_NUM*NAH*NZX*4B/mpi_n= 217KB
 vs. p.e. 10GB/s * 1us * 10 = 100kB

WARNING: pt_n < B_NUM, unused MPI-buffer

 read daten.def
# m_square v0.3 Feb2019 JS
# cfg.maxNN=10240,Nw=4*NN
# a=(42  0)# b=( 0  1)#  NN=42 == volume=Det(l)=42
# emin=(0 0) emax=(42 1)
#===uvec=== 1 0 0 1
#===edge=== 42 0 0 1
#===pbcf=== 0 0 42 0 42 1 0 1
#+++model+++
# NN=Number_of_sites Nw=Number_of_bonds Nv=Number_of_bonds(2)
start reading number of terms at L10
WARNING: NN Nw not unique (waste of space)
 daten.def: nn=  42 nw=  42
 config.h:  NN=  48 Nw= 432
start reading  42  one-site-terms at L11
start reading  42  two-site-terms at L55
start reading   0 four-site-terms at L98
EOF at L97 num_para=2

binomial_ini: initialize binomial coefficient array, n=42
 Tbinom [unsigned][int,flt][bits]= _i64
 Tnorm2 [unsigned][int,flt][bits]= _i64


DBG.scan_int: verbose= 3
DBG.scan_int: pew= 2
DBG.scan_int: nev= 0
DBG.scan_int: ne0= 0
DBG.scan_int: max_ea= 1
DBG.scan_int: startvec= 14
DBG.scan_dbl: z_anisotropy= 1
DBG.scan_dbl: xy_anisotropy= 1
DBG.scan_int: sisj= 4
DBG.scan_int: sym_lm= 0
DBG.scan_int: sym_ud= 1
DBG.scan_inta: sym_k= 0

BBG.scan_dbla: param= 1
# p1= 1
# p2= 0.4  ... can also be used
DBG: set CONFIG_S1SYM
WARN: reindex disabled, please report errors
DBG: MaxSym=576=(12*NN) size(sym)=5.02e+04
 num_lm=42 (noLM)
WARNING: CONFIG_S1SYM generates unused code for this model,
         please replace by CONFIG_NOS1SYM for best performance

auto-sym-search.symcreate5: ... CONFIG_SymSearch = 1 (see config.h)
 +++ search T0... t=O(n^4.2) abort slow sym-search by sending SIGUSR2 ...
 l= 2 k= 0  0 1-41 2-40 3-39 4-38 5-37 6-36 7-35 8-34 9-33 10-32 11-31 12-30 13-29 14-28 15-27 16-26 17-25 18-24 19-23 20-22 21 i=0...0
 l= 2 k= 0  0-1 2-41 3-40 4-39 5-38 6-37 7-36 8-35 9-34 10-33 11-32 12-31 13-30 14-29 15-28 16-27 17-26 18-25 19-24 20-23 21-22 i=1...82
 sym_stored= 84 (num_sym+1) k=sym_found= 84 = 2*nn +0 rcalls= 3486
INFO: reduce  MaxSym to (2*NN) to reduce sym-array
 numsym= 84 symall= 84 (incl. (P=1)-sym) numgen= 2 write daten.sy2
different pairs
 ndp= 22 wdp= 42 84 84 84 84 84 84 84 84 84 84 84 84 84 84 84 84 84 84 84 ...
 start sublattice (SL) detection
 SL  1  2 : ABABABABABABABABABABABABABABABABABABABABAB
 SL  2  1 : AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
DBG: Ld_bits= 6 tbase= 64 (2^n) ulong
DBG: sym_bn_m size=   50688 alignment=  128 MaxSym=576 (*11*8B)
DBG: sym_i    size=   27648 alignment=  128 MaxSym=576 (*48*1B)
DBG: zero-masks= 254 of  913

 nn,nu,nd 42 21 21   nw= 42  (number of sites, up/down-spins and bounds)
 k_ud 0 k_T _0_0
 parameters J1= 1  
 Bsize=8 (size of each basecfg, NN/8[Byte]), tbase[bits]=64

WARNING: timer returns 0.0, expect some greater
PRF: timer_resolution[s]= 2.610e-07 loops= 1 tmmin= 4.000e-02
speed_tests (variants of 48-bit permutation, Ld_bits=6)
DBG: rcfg.blocksize=434k*8B vvv&3=3 
DBG:    0. 0 rcfg 0 0x252f392aa93
DBG:    0. 0 rcfg 1 0x184ef7e540a
DBG:    0. 0 rcfg 2 0x0f2b4a4f91a
DBG:    0. 0 rcfg 3 0x01dcf11e0f6
DBG:    0. 0 rcfg 4 0x0de184b1b76
DBG:    0. 0 speedtests.sym_bn_m_ini start ...
DBG: check_minsymcfg dflt=bnV   nsym=84, N=48 ncfgs=444416 vvv&64 ...
DBG: check_minsymcfg.end  nsymcfgs,nsamples=   2688 444416 1/165.333
PRF: speedtest.start (1s/test, cfs=cfg*nsym, nsym=84, N=48, 80%*SH)
PRF: minsymcfg_dflt  0.431s loops/s= 2.3e+00 t[ns]/cfs=    5.77 bn32 pt0 0
PRF: minsymcfg_dflt  -min-- loops/s= 2.3e+00 t[ns]/cfs=    5.77 bn32 pt0
PRF: minsymcfg_dflt  -max-- loops/s= 2.3e+00 t[ns]/cfs=    5.77 bn32 pt0
PRF:    mpi speed range  92.0..97.5..100%    t[ns]/cfs=    5.62 bad=1,1
DBG: fast task   983 tcn510.local         100.0% t[ns]=    5.62
DBG: slow task   408 tcn506.local          92.0% t[ns]=    6.11
DBG.cpumask  1023. 0 0x0000000000000000 nbits=1 127...127PRF: minsymcfg_lNbrk 0.250s loops/s= 5.2e+05 t[ns]/cfs=   11.36 ud=21+21 0
PRF: symcfg_loopN    0.266s loops/s= 3.2e+07 t[ns]/cfg=   31.70 4Ni 0
PRF: minsymcfg_bnV32 0.428s loops/s= 1.0e+06 t[ns]/cfs=    5.73 99i 58
PRF: symcfg_loopNv32 0.450s loops/s= 7.5e+07 t[ns]/cfg=   13.41 4Ni 0
DBG.cpumask  1022. 0 0x0000000000000000 nbits=1 126...126PRF: minsymcfg_lNv32 0.961s loops/s= 4.6e+05 t[ns]/cfs=   12.87 4Ni 16
WARNING: cfg table l1 not set for speed_test, skip (ToDo)
DBG: ... _nhv-test go on ...
WARNING: cfg table l1 or mpi_l1 not set
PRF: minsymcfg_bn    1.377s loops/s= 3.2e+05 t[ns]/cfs=   18.45 99i 52
PRF:           nhv   0.004s loops/s= 5.6e+02 t[ns]/cfs=  154.47
PRF:           nhv   0.004s   nzx/s= 6.5e+06 t[ns]/cfs=  154.47
DBG: estimated nzx,max_nzx,max_nzAH/AH= 22.40 33 22.40 (incl. diag)
PRF_MPI: test SendRecv(i+n/2,i+n/2,1024KiB) mpi_n=1024
PRF_MPI: 0 32MiB/3.8e-01s=    87 MB/s rc0
PRF_MPI: 0 32MiB/4.4e-01s=    77 MB/s min_rank,nmin: 553 928
PRF_MPI: 0 32MiB/3.0e-02s=  1125 MB/s max_rank,nmax: 898  36
PRF_MPI: 1 32MiB/3.4e-01s=    98 MB/s rc0
PRF_MPI: 1 32MiB/3.6e-01s=    94 MB/s min_rank,nmin: 293 696
PRF_MPI: 1 32MiB/2.8e-01s=   119 MB/s max_rank,nmax: 640  16
PRF_MPI: 2 32MiB/3.5e-01s=    96 MB/s rc0
PRF_MPI: 2 32MiB/3.5e-01s=    96 MB/s min_rank,nmin: 120 751
PRF_MPI: 2 32MiB/3.4e-01s=    99 MB/s max_rank,nmax: 169  29
PRF_MPI: 3 32MiB/3.5e-01s=    97 MB/s rc0
PRF_MPI: 3 32MiB/3.5e-01s=    96 MB/s min_rank,nmin: 326 622
PRF_MPI: 3 32MiB/3.4e-01s=    99 MB/s max_rank,nmax:  94  33
PRF_MPI: byte_errors= 0 rc0
 get_maxscfg (vvv=3)&5=1
  get_maxscfg= 0x15555555555
  end.maxscfg nt0= 1 nt1= 195891 nt= 612248 t[m]= 0.00
 startcfg= 0x000001fffff chkpt=0
 --- starting hilbert space generation ---
 filter out symmetric ising base states (n1 .ge. N!/(nu!nd!))/sym
 algo= 0 (0=auto, 16=recursive, 32=old_parallel)
 using algorithm 0 (0=scan_bitpermutations, 1=recursive)

 numsymconf(538257874440)/(mpi*pt) slow dbl
 numsymconf(538257874440)/(mpi*pt) out=tmp/l1_0000.dat
 ncfgs=5.38e+11 nsym=84 estimated nscfgs n1: 6.41e+09
DBG i3=ncfgs reduced to 1.764235e+11 = 32.7768%, factor is 3.0509
DBG i3=ncfgs= 1.764235e+11  blksize=l1range= 4.194304e+06
DBG start_i1= 0x000001fffff   0%
DBG maxscfg0= 0x15555555555  33%
DBG maxscfg1= 0x3ffffe00000 100%
PRF io=     0 0 idx=    0 .. 4e+09 found=1e+09 sum=1e+09 tmax[m]= 13
PRF io=     1 0 idx=4e+09 .. 9e+09 found=8e+08 sum=2e+09 tmax[m]= 11
PRF io=     2 0 idx=9e+09 .. 1e+10 found=2e+08 sum=2e+09 tmax[m]= 8
PRF io=     4 0 idx=2e+10 .. 2e+10 found=2e+08 sum=3e+09 tmax[m]= 6
PRF io=     8 0 idx=3e+10 .. 4e+10 found=4e+07 sum=3e+09 tmax[m]= 4
PRF io=    16 0 idx=7e+10 .. 7e+10 found=9e+05 sum=3e+09 tmax[m]= 2
PRF io=    32 0 idx=1e+11 .. 1e+11 found=    0 sum=3e+09 tmax[m]= 1
PRF io=    41 0 idx=2e+11 .. 2e+11 found=    1 sum=3e+09 tmax[m]= 1
PRF task 0 min/maxtime[ns]/cfg=    72.86   595.13
 ns: n1= 3204236779 sgn0= 0 n_ans= 0 sum_n2= 0
 sum!=i3 load_l1 tmp/l1_0000.dat ofs=3.20424e+09 len=1 unit[B]=8 err=0
 gt.maxscfg= 0x15555555555 from getmaxcfg()
 ns.maxscfg= 0x15555555555 from l1[3204236779-1]
PRF ns.t[m]=1.07 checkpoint2
 N,nu,nd= 42  21 21  n1= 3204236779  n1_bits= 32 node_n1_bits= 22
MEM: vector size = n1*    24B = 7.69e+10 (all nodes, needed)
MEM: matrix size = n1*nzx*14B = 1.95e+13 (all nodes, optional)
MEM: ... assuming nzx=NZXMAX=434, real value nzx will be lower
MEM:  PT-buf =  pt_n*AH*nzx  = 2.09e+07 (alloc per MPI)
MEM: MPI-buf = B_NUM*AH*nzx  = 5.69e+07 (per node, * 4..8B)
MEM: ... recommend num_tasks*1MB = 1024 MB/node for buffers
MEM: ... but max. 10%*PhysMem, please check "size ./spin"
MEM: MPI-A2a-table size = node_n1/AH*mpi_n*4B = 4.10e+03 (per node, minimize)
MEM: ... AH=1024 should be multiple of mpi_n=1024 (ToDo2017-01 mpi-speed)
PRF: mean_mpi_packet_size: pt_n*AH*nzx/mpi_n=434 ?* Hnz=14B
MEM: maxmem  =  0.00e+00 (Bytes per thread, -1.0=auto)
DSK: maxfile =  0.00e+00 (Bytes per thread,  0.0=no_disk)
DBG.b_ini: mpi*pt*thread_n1= 1024 *  1 *      3129138 = 3204237312 >=n1
mpi_blks: num*length+rest= 1023 *  3129138 +  3128605 = 3204236779 =n1
DBG.node_ah_blks=   3056 =1*  3056 (mpi_max)
 mymap(tmp/l1_0000.dat + node_ofs to *l1)
 mymap=alloc+read(2.5e+07) ofs=0.000e+00 tmp/l1_0000.dat fd=66 mpi= 0
 l1_load.node=32
DBG.cpumask     1. 0 0x0000000000000002 nbits=1  1...1 l1_load.node=1

WARNING: parallel mmap one file may knock out the file system (ToDo)
 mymap=alloc+read(2.5e+07) ofs=2.503e+07 tmp/l1_0000.dat fd=66 mpi= 1
DBG.cpumask     2. 0 0x0000000000000004 nbits=1  2...2 l1_load.node=2
 l1_load.node=64
 l1_load.node=4
 l1_load.node=128
 l1_load.node=8
 mymap=alloc+read(2.5e+07) ofs=2.561e+10 tmp/l1_0000.dat fd=64 mpi=1023
PRF.load_l1 t[min]= 0.01  streams=33
 l1_load.node=16
 l1_load.node=256
DBG.cpumask   512. 0 0x0000000000000001 nbits=1  0...0 l1_load.node=512
 mymap=alloc+read(2.5e+07) ofs=2.558e+10 tmp/l1_0000.dat fd=64 mpi=1022
 a0.malloc  dbl(8B) v0,v1,0*ev a 2.50e+07B/mpitask
 alloc(2.5e+07) += 2.5e+07 => tmp/v0_0000.map map=0 node=  0
 alloc(2.5e+07) += 5.0e+07 => tmp/v1_0000.map map=0 node=  0

 ini_norm2 ini_mpi_l1[] create n2hashtables n2b,n2h - skipped (ToDo)
 ini_norm2.end
PRF: n2.t[m]=   0.00
MEM.statm0 vm,rss[4KB]= 1.2e+06 4.5e+04  vm,rss[B]= 4.87e+09 1.85e+08
MEM.status: VmPeak:	 4752356 kB
MEM.status: VmSize:	 4752356 kB
MEM.status: MemTotal:       263912064 kB
MEM.status: MemFree:        228403036 kB
MEM.status: MemAvailable:   225902212 kB
WARNING: libmpi may cause OOM=OutOfMemory and crash here
WARNING: ... but B_NUM=CFG_PTHREAD is set bigger than needed, please reduce!
DBG: ReserveMB= 150 (ompi chkpt, not eaten by SH)
ToDo: try mpiexec --mca mpi_preconnect_mpi 1
DBG: maxfile[B/core]=maxmem*14= 0.00e+00 autoMax= 0.00e+00
DBG: reserve=OK, try Hbuf/thread (min(1/16...1)* 0.00e+00
DBG: alloc 1024* 1* 0.00e+00 Byte Hbuffer failed
 --- starting hilbert matrix generation (storeh) ---
 NZXMAX= 434  AHEAD_LINES= 1024 hnzSize=Hsize/HBLen: 6076K/434K=14.00
 vvv&2 (=2) statH (speed-~5%), vvv&(64+2) (=0) prtH
 ini_thxy.bits:  thxy.xy 32  BY 16  HR 64  node_n1,n1 23 33
 SH   2.09% hnz/i=  12.10 nz/s= 1024*1.16e+05 t100%=   5.45m
 SH   8.38% hnz/i=  13.32 nz/s= 1024*1.70e+05 t100%=   4.09m
 SH  33.51% hnz/i=  14.38 nz/s= 1024*2.16e+05 t100%=   3.48m

DBG: ToDo better hr[param], extra hr_sqrt(n2[i]), hr_phase?
DBG: h_checkpoint.w: hr_num_max=     0 (entries/thread) tmp/hr_s0000.dat..
 checkpoint5.w
 optimization of size via BFACTOR:
 max_nzAH_recv= 24743= 25*AH vs. NZX=434>=(2*nu*bonds/site+1)
PRF: SH.t_min=   3.43 blk= 0
PRF: SH.t_max=   3.43 blk= 0
PRF: SH.t[min]=  3.43
PRF: SH_speed.nz/s= 3.42e+05  t[ns]/nz=  2923.9 (per core) 34.8*84
PRF: SH_speed.nz/s= 3.50e+08  t[ns]/nz=     2.9 (1024 cores)
DBG: opt_nodisk = 0 (diskless mode, ToDo)

MPI_traffic  pkts/task=2*n1/ahead*mpi_n= 6.4089e+09 ?= 6.25869e+06 (counted)
MPI_traffic  bytes/nz= 16  maxpktlen= 4092*tbase
MPI_pkt ..size/nz=     1K cnt=3.12602e+06
MPI_pkt ..size/nz=     4K cnt=     268
MPI_pkt ..size/nz=    16K cnt=       0
MPI_pkt ..size/nz=    64K cnt=       0
MPI_pkt ..size/nz=   256K cnt=       0
MPI_pkt ..size/nz=  1024K cnt=       0
MPI_pkt size../nz=  1024K cnt=       0
 n1 = hilbert dimension,  hnz = number of nonzero matrix elements
 n1= 3.204e+09      nzx_raw=hnz/n1= 22.512  
 stored_nz_blks= mem+dsk  blk_size= AH*nzx*HR[B]= 0.00e+00
 stored_nz_blks=   0%   mem=   0%   nz_blks= 1024*1* 0..0 of 3056
 hnz_blks/thread=      0.00 balance= 109..208 max_eff=0.0% min,maxblk=0,1017
 hnz_blks/node=  3056 blk=AH=1024 (blks*AH>=n1) hnz_blk_sz=6.22e+06
Warning: H stored incompletely
 vvv&2 statistics for sparse matrix H:
 hnz transfer local.1,pthread.1,mpi.1024= 4.5e+10 0.0e+00 2.7e+10
 hnz transfer local.1,pthread.1,mpi.1024=     62%      0%     38%
 nzx,w      :  1,4294967296  2,236223201280  3,13301513715712 ...  19,2362232012800  20,42949672960  21,4294967296
ERROR: sumw=13762092174445379584 != n1=3204236779
 nzx*n1     :    22.512 *   3204236779  (diagonal packed + min_nzx=1)
 nzx*n1     :    22.512 *   3204236779  (raw not packed)
 minHdiag   :  0.500000000
 minH12     :  0.077151675
 maxHdiag   : 10.500000000
 maxH12     :  3.240370349
 trace/n1   : -0.256105625
 sum12/n1   :  5.377965296
 sum21/n1   :  5.377965296
 sum21-12^* : -0.001281738  0.000%
MEM.statm0 vm,rss[4KB]= 1.2e+06 4.8e+04  vm,rss[B]= 4.87e+09 1.97e+08
MEM.status: VmPeak:	 4905960 kB
MEM.status: VmSize:	 4752356 kB
MEM.status: MemTotal:       263912064 kB
MEM.status: MemFree:        226940724 kB
MEM.status: MemAvailable:   224434792 kB
 test_all_sym
 randvec6-00-6b8b4567.r=1+1e+09 normvec.r=1+1e+09 v/r r=1+2e-15
PRF: randvec.t[m]= 0.00
PRF: inc1.clrvec.t[m]=  0.00
 --- start Lanczos diagonalization inc1 (NEW=4, tmp/tri.txt) ---
SpMV-characteristics: FLOP/nz= 2  BYTE/nz= 12 (?) (random M, V=f64)
[TIMINGS] hamilton: 275.949323
DBG: maxTridiag=    999.00 x=     42.00
[TIMINGS] hamilton: 214.514910
[TIMINGS] hamilton: 226.390545
[TIMINGS] hamilton: 229.987250
[TIMINGS] hamilton: 291.465316
PRF: i001 i100.t[m]= 460.26 nz/s= 2.61e+08  1024*2.55e+05 t[ns]/nz=  3920.2
PRF: i005 i100.t[m]= 412.98 nz/s= 2.91e+08  1024*2.84e+05 t[ns]/nz=  3517.5
[TIMINGS] hamilton: 220.904788
[TIMINGS] hamilton: 218.127019
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd: error: *** JOB 3101661 ON tcn252 CANCELLED AT 2023-07-20T13:39:16 ***
slurmstepd: error: *** STEP 3101661.0 ON tcn252 CANCELLED AT 2023-07-20T13:39:16 ***

JOB STATISTICS
==============
Job ID: 3101661
Cluster: snellius
User/Group: twest/twest
State: CANCELLED (exit code 0)
Nodes: 8
Cores per node: 128
CPU Utilized: 24-11:27:19
CPU Efficiency: 97.60% of 25-01:53:04 core-walltime
Job Wall-clock time: 00:35:16
Memory Utilized: 186.91 GB (estimated maximum)
Memory Efficiency: 10.43% of 1.75 TB (1.75 GB/core)
